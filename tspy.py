import asyncio
import re

from telethon import events
from telethon.tl.types import Message

from .. import loader


@loader.tds
class SpyMod(loader.Module):
    """–°–ª–µ–∂–∫–∞ –∑–∞ –∫–ª–∞–Ω–∞–º–∏ –≤ –ñ–∞–±–∞–±–æ—Ç–µ."""

    strings = {"name": "spy"}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    async def err(self, message: Message, p):
        async with self.client.conversation(message.chat_id, exclusive=False) as conv:
            try:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(
                        from_users=1124824021, chats=message.chat_id, pattern=p
                    )
                )
            except asyncio.exceptions.TimeoutError:
                RSP = await self.client.get_messages(message.chat_id, search=" ")
            await conv.cancel_all()

    async def watcher(self, message: Message):
        try:
            if not isinstance(message, Message):
                return
            if (
                message.text.startswith(("–û—á–µ–Ω—å –∂–∞–ª—å", "–ö–ª–∞–Ω ", "–≠–π, –∫–ª–∞–Ω"))
                and message.from_id in [1124824021]
                and "–£—Å–∏–ª–∏—Ç–µ–ª—å" not in message.text
                and "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ" not in message.text
            ):
                if "–æ–¥–µ—Ä–∂–∞–ª" in message.text:
                    klan = re.search(
                        r"–Ω (.+) –æ[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", message.text
                    )
                    tog = f"üèÜ {klan.group(1)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(2)}"
                elif "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏" in message.text:
                    klan = re.search(
                        r", (.+),[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", message.text
                    )
                    tog = f"üèÜ {klan.group(2)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(1)}"
                else:
                    klan = re.search(r"–Ω (.+),.+\n.+: (.+)", message.text)
                    tog = f"{klan.group(1)} ü´Ç {klan.group(2)}"
                    return await self.client.send_message(1767017980, tog)
                await self.client.send_message(1767017980, tog)
                p = await self.client.get_messages(
                    1537222628, search=f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                )
                if p.total == 0:
                    p = await self.client.get_messages(
                        1537222628, search=f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(2)}"
                    )
                for i in p:
                    txt = f"Cid: {message.chat_id}\n\n–ö–ª–∞–Ω: {klan.group(1)}\n–õ–∏–≥–∞: {re.search(r'–∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ', i.text).group(1)}"
                for i in re.findall(r"‚Ä¢.+(<.+?(\d+).+>)", message.text):
                    txt += f"\n{i[0]} {i[1]}"
                await self.client.send_message(1655814348, txt)
            elif message.message.casefold().startswith(
                ("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É", "@toadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É")
            ) and len(message.message) in [21, 30]:
                p = None
                await self.err(message, p)
                if "–û—Ç–ª–∏—á–Ω–æ!" not in RSP.text:
                    return
                ms = await self.client.get_messages(
                    1655814348, search=f"{message.chat_id} {message.from_id} –õ–∏–≥–∞"
                )
                for i in (
                    i for i in ms if "–¥–µ—Ä–µ–≤—è–Ω" not in i.text.casefold() and "–õ–∏–≥–∞" in i.text
                ):
                    klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.text).group(1)
                    liga = re.search(r"–õ–∏–≥–∞: (.+)", i.text).group(1)
                    p = await self.client.get_messages(1537222628, search=f"35 –∫–ª–∞–Ω–æ–≤ {klan}")
                    if p.total == 0:
                        txt = f"{klan}\n–õ–∏–≥–∞: {liga}"
                    else:
                        for s in p:
                            txt = f"{klan}\n–õ–∏–≥–∞: {re.search(r'–∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ', s.text).group(1)}"
                            if klan not in s.text:
                                txt = f"{klan}\n–õ–∏–≥–∞: {liga}"
                    await self.client.send_message(1767017980, f"–í –ø–æ–∏—Å–∫–µ {txt}")
            elif message.message.startswith("–ê–ª–ª–æ,") and message.from_id in [1124824021]:
                klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", message.text)
                src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                ms = await self.client.get_messages(1537222628, search=src)
                if ms.total == 0:
                    src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(2)}"
                    ms = await self.client.get_messages(1537222628, search=src)
                for i in ms:
                    if "–¥–µ—Ä–µ–≤—è–Ω" in i.text.casefold() or klan.group(1) not in i.text:
                        return
                    lig = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.text).group(1)
                txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {lig}"
                await self.client.send_message(1767017980, txt)
                tog = f"Cid: {message.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n–õ–∏–≥–∞: {lig}"
                for i in re.findall(r"<.+?id=(\d+)\">", message.text):
                    tog += f"\n{i}"
                await self.client.send_message(1655814348, tog)
            elif message.message.casefold().startswith(("–º–æ–π –∫–ª–∞–Ω", "@toadbot –º–æ–π –∫–ª–∞–Ω")):
                p = "–ö–ª–∞–Ω"
                await self.err(message, p)
                if p not in RSP.text:
                    return
                klan = re.search(r"–Ω (.+):[\s\S]*–∞: (.+)[\s\S]*—å: (.+)", RSP.text)
                info = f"Cid: {message.chat_id}\nUid: {message.from_id}\n–õ–∏–≥–∞: {klan.group(2)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(3)}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
                await self.client.send_message(1655814348, info)
            else:
                return
        except Exception:
            return
